#pragma checksum "C:\Users\risin\source\repos\BlazorClientSideTestApp\BlazorClientSideTestApp\Pages\ToDo.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f5b5306506415905387e40b1a92e1162a291cee5"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorClientSideTestApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorClientSideTestApp;
    using BlazorClientSideTestApp.Shared;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/todo")]
    public class ToDo : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 44 "C:\Users\risin\source\repos\BlazorClientSideTestApp\BlazorClientSideTestApp\Pages\ToDo.razor"
            

    IList<ToDoItem> items = new List<ToDoItem>();
    private string newItem;

    protected override async Task OnInitAsync()
    {
        items = await Http.GetJsonAsync<List<ToDoItem>>("sample-data/todoitems.json");
    }

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newItem))
        {
            items.Add(new ToDoItem()
            {
                DateCreated = DateTime.Now,
                Description = newItem,
                ID = Guid.NewGuid()
            });
            newItem = string.Empty;
        }
    }

    private void RemoveTodo(Guid id)
    {
        items.Remove(items.First(x => x.ID == id));
    }

    private void ToggleToDo(Guid id)
    {
        var todo = items.First(x => x.ID == id);
        todo.IsComplete = !todo.IsComplete;
    }

    class ToDoItem
    {
        public Guid ID { get; set; }
        public string Description { get; set; }
        public bool IsComplete { get; set; }
        public DateTime DateCreated { get; set; }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
